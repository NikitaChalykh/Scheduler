"""Create DB structure

Revision ID: a3c1f605aff1
Revises: 
Create Date: 2025-03-03 19:55:47.517591

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a3c1f605aff1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('log_types',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_history_statuses',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tasks',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), server_default='', nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('logs',
    sa.Column('create_date', sa.DateTime(), server_default=sa.text("timezone('UTC', now())"), nullable=False),
    sa.Column('log_type_id', sa.UUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['log_type_id'], ['log_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_logs_create_date'), 'logs', ['create_date'], unique=False)
    op.create_table('task_history',
    sa.Column('create_date', sa.DateTime(), server_default=sa.text("timezone('UTC', now())"), nullable=False),
    sa.Column('start_date', sa.DateTime(), server_default=sa.text("timezone('UTC', now())"), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('status_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['status_id'], ['task_history_statuses.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_history_create_date'), 'task_history', ['create_date'], unique=False)
    op.create_index(op.f('ix_task_history_start_date'), 'task_history', ['start_date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_history_start_date'), table_name='task_history')
    op.drop_index(op.f('ix_task_history_create_date'), table_name='task_history')
    op.drop_table('task_history')
    op.drop_index(op.f('ix_logs_create_date'), table_name='logs')
    op.drop_table('logs')
    op.drop_table('tasks')
    op.drop_table('task_history_statuses')
    op.drop_table('log_types')
    # ### end Alembic commands ###
